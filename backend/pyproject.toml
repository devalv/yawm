[tool.poetry]
name = "yawm-backend"
version = "0.4.0"
description = "Yet another wishlist maker"
authors = ["Aleksei Devyatkin <aleksei@devyatkin.dev>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
gino-starlette = "^0.1.4"
fastapi = "^0.75.1"
ujson = "^5.2.0"
uvicorn = "^0.17.6"
alembic = "^1.7.7"
psycopg2-binary = "^2.9.3"
python-multipart = "^0.0.5"
fastapi-pagination = {extras = ["gino"], version = "^0.9.1"}
httpx = "^0.22.0"
uvloop = "^0.16.0"
python-jose = "^3.3.0"
pydantic = {extras = ["email"], version = "^1.9.0"}
passlib = "^1.7.4"
coolname = "^1.1.0"
fastapi-health = "^0.4.0"
google-auth = "^2.6.2"
google-auth-oauthlib = "^0.5.1"

[tool.poetry.dev-dependencies]
pytest = "^7.1.1"
coverage = "^6.3.2"
codecov = "^2.1.12"
pytest-cov = "^3.0.0"
pytest-flake8 = "^1.1.1"
requests = "^2.27.1"
pre-commit = "^2.18.1"
async-asgi-testclient = "^1.4.10"
pytest-asyncio = "^0.18.3"
pytest-alembic = "^0.8.1"
snapshottest = "^0.6.0"
pytest-dotenv = "^0.5.2"
pytest-httpx = "^0.20.0"
mypy = "^0.942"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
inline-quotes = "double"
max-line-length = 90
ignore = ["A002", "A003", "VNE003", "B008"]

[tool.black]
line-length = 90
target-version = ["py310"]

[tool.isort]
profile = "black"
src_paths = ["core", "api", "tests"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_missing_imports = false
warn_return_any = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--flake8 --cov=api --cov=core --cov-report=term --test-alembic"
testpaths = ["tests"]
markers = ["smoke", "api_base", "api_full", "auth", "security"]
flake8-max-line-length = 90
env_files = "tests/.env"
flake8-ignore = [".git/*.* ALL", "__pycache__/*.* ALL"]
asyncio_mode = "strict"

[tool.coverage.run]
omit = ["tests", "core/database/migrations/__init__.py", "core/database/migrations/env.py", "core/database/migrations/versions/*"]

[tool.coverage.report]
fail_under = 93
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError"
]

[tool.coverage.html]
directory = "tests/html"
